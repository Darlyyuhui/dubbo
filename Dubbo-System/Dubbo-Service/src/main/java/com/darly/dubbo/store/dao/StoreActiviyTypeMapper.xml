<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.darly.dubbo.store.dao.StoreActiviyTypeMapper" >
  <resultMap id="BaseResultMap" type="com.darly.dubbo.store.bean.StoreActiviyType" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="STORE_TYPE" property="storeType" jdbcType="VARCHAR" />
    <result column="STORE_DESC" property="storeDesc" jdbcType="VARCHAR" />
    <result column="STORE_START_TIME" property="storeStartTime" jdbcType="TIMESTAMP" />
    <result column="STORE_END_TIME" property="storeEndTime" jdbcType="TIMESTAMP" />
    <result column="STORE_TYPE_OP" property="storeTypeOp" jdbcType="VARCHAR" />
    <result column="STORE_CREATETIME" property="storeCreatetime" jdbcType="TIMESTAMP" />
    <result column="STORE_UPDATETIME" property="storeUpdatetime" jdbcType="TIMESTAMP" />
    <result column="STORE_UPDATEREASON" property="storeUpdatereason" jdbcType="VARCHAR" />
    <result column="STORE_TYPE_ICON" property="storeTypeIcon" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, STORE_TYPE, STORE_DESC, STORE_START_TIME, STORE_END_TIME, STORE_TYPE_OP, STORE_CREATETIME, 
    STORE_UPDATETIME, STORE_UPDATEREASON,STORE_TYPE_ICON
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.darly.dubbo.store.bean.StoreActiviyTypeSearch" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from store_activiy_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from store_activiy_type
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from store_activiy_type
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.darly.dubbo.store.bean.StoreActiviyTypeSearch" >
    delete from store_activiy_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.darly.dubbo.store.bean.StoreActiviyType" >
    insert into store_activiy_type (ID, STORE_TYPE, STORE_DESC, 
      STORE_START_TIME, STORE_END_TIME, STORE_TYPE_OP, 
      STORE_CREATETIME, STORE_UPDATETIME, STORE_UPDATEREASON,STORE_TYPE_ICON
      )
    values (#{id,jdbcType=VARCHAR}, #{storeType,jdbcType=VARCHAR}, #{storeDesc,jdbcType=VARCHAR}, 
      #{storeStartTime,jdbcType=TIMESTAMP}, #{storeEndTime,jdbcType=TIMESTAMP}, #{storeTypeOp,jdbcType=VARCHAR}, 
      #{storeCreatetime,jdbcType=TIMESTAMP}, #{storeUpdatetime,jdbcType=TIMESTAMP}, #{storeUpdatereason,jdbcType=VARCHAR}, #{storeTypeIcon,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.darly.dubbo.store.bean.StoreActiviyType" >
    insert into store_activiy_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="storeType != null" >
        STORE_TYPE,
      </if>
      <if test="storeDesc != null" >
        STORE_DESC,
      </if>
      <if test="storeStartTime != null" >
        STORE_START_TIME,
      </if>
      <if test="storeEndTime != null" >
        STORE_END_TIME,
      </if>
      <if test="storeTypeOp != null" >
        STORE_TYPE_OP,
      </if>
      <if test="storeCreatetime != null" >
        STORE_CREATETIME,
      </if>
      <if test="storeUpdatetime != null" >
        STORE_UPDATETIME,
      </if>
      <if test="storeUpdatereason != null" >
        STORE_UPDATEREASON,
      </if>
      <if test="storeTypeIcon != null" >
        STORE_TYPE_ICON,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="storeType != null" >
        #{storeType,jdbcType=VARCHAR},
      </if>
      <if test="storeDesc != null" >
        #{storeDesc,jdbcType=VARCHAR},
      </if>
      <if test="storeStartTime != null" >
        #{storeStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="storeEndTime != null" >
        #{storeEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="storeTypeOp != null" >
        #{storeTypeOp,jdbcType=VARCHAR},
      </if>
      <if test="storeCreatetime != null" >
        #{storeCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="storeUpdatetime != null" >
        #{storeUpdatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="storeUpdatereason != null" >
        #{storeUpdatereason,jdbcType=VARCHAR},
      </if>
      <if test="storeTypeIcon != null" >
        #{storeTypeIcon,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.darly.dubbo.store.bean.StoreActiviyTypeSearch" resultType="java.lang.Integer" >
    select count(*) from store_activiy_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update store_activiy_type
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.storeType != null" >
        STORE_TYPE = #{record.storeType,jdbcType=VARCHAR},
      </if>
      <if test="record.storeDesc != null" >
        STORE_DESC = #{record.storeDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.storeStartTime != null" >
        STORE_START_TIME = #{record.storeStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.storeEndTime != null" >
        STORE_END_TIME = #{record.storeEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.storeTypeOp != null" >
        STORE_TYPE_OP = #{record.storeTypeOp,jdbcType=VARCHAR},
      </if>
      <if test="record.storeCreatetime != null" >
        STORE_CREATETIME = #{record.storeCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.storeUpdatetime != null" >
        STORE_UPDATETIME = #{record.storeUpdatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.storeUpdatereason != null" >
        STORE_UPDATEREASON = #{record.storeUpdatereason,jdbcType=VARCHAR},
      </if>
      <if test="record.storeTypeIcon != null" >
        STORE_TYPE_ICON = #{record.storeTypeIcon,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update store_activiy_type
    set ID = #{record.id,jdbcType=VARCHAR},
      STORE_TYPE = #{record.storeType,jdbcType=VARCHAR},
      STORE_DESC = #{record.storeDesc,jdbcType=VARCHAR},
      STORE_START_TIME = #{record.storeStartTime,jdbcType=TIMESTAMP},
      STORE_END_TIME = #{record.storeEndTime,jdbcType=TIMESTAMP},
      STORE_TYPE_OP = #{record.storeTypeOp,jdbcType=VARCHAR},
      STORE_CREATETIME = #{record.storeCreatetime,jdbcType=TIMESTAMP},
      STORE_UPDATETIME = #{record.storeUpdatetime,jdbcType=TIMESTAMP},
      STORE_UPDATEREASON = #{record.storeUpdatereason,jdbcType=VARCHAR},
      STORE_TYPE_ICON = #{record.storeTypeIcon,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.darly.dubbo.store.bean.StoreActiviyType" >
    update store_activiy_type
    <set >
      <if test="storeType != null" >
        STORE_TYPE = #{storeType,jdbcType=VARCHAR},
      </if>
      <if test="storeDesc != null" >
        STORE_DESC = #{storeDesc,jdbcType=VARCHAR},
      </if>
      <if test="storeStartTime != null" >
        STORE_START_TIME = #{storeStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="storeEndTime != null" >
        STORE_END_TIME = #{storeEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="storeTypeOp != null" >
        STORE_TYPE_OP = #{storeTypeOp,jdbcType=VARCHAR},
      </if>
      <if test="storeCreatetime != null" >
        STORE_CREATETIME = #{storeCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="storeUpdatetime != null" >
        STORE_UPDATETIME = #{storeUpdatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="storeUpdatereason != null" >
        STORE_UPDATEREASON = #{storeUpdatereason,jdbcType=VARCHAR},
      </if>
      <if test="storeTypeIcon != null" >
        STORE_TYPE_ICON = #{storeTypeIcon,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.darly.dubbo.store.bean.StoreActiviyType" >
    update store_activiy_type
    set STORE_TYPE = #{storeType,jdbcType=VARCHAR},
      STORE_DESC = #{storeDesc,jdbcType=VARCHAR},
      STORE_START_TIME = #{storeStartTime,jdbcType=TIMESTAMP},
      STORE_END_TIME = #{storeEndTime,jdbcType=TIMESTAMP},
      STORE_TYPE_OP = #{storeTypeOp,jdbcType=VARCHAR},
      STORE_CREATETIME = #{storeCreatetime,jdbcType=TIMESTAMP},
      STORE_UPDATETIME = #{storeUpdatetime,jdbcType=TIMESTAMP},
      STORE_UPDATEREASON = #{storeUpdatereason,jdbcType=VARCHAR},
      STORE_TYPE_ICON = #{storeTypeIcon,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.darly.dubbo.store.bean.StoreActiviyTypeSearch" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from store_activiy_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>