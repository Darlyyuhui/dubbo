<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.darly.dubbo.lucene.dao.SystemLuceneMapper" >
  <resultMap id="BaseResultMap" type="com.darly.dubbo.lucene.bean.SystemLucene" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="LUCENEKEY" property="lucenekey" jdbcType="VARCHAR" />
    <result column="LUCENEVALUE" property="lucenevalue" jdbcType="VARCHAR" />
    <result column="LUCENEURL" property="luceneurl" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, LUCENEKEY, LUCENEVALUE, LUCENEURL
  </sql>
  <select id="selectByExample" fetchSize="-2147483648" resultMap="BaseResultMap" parameterType="com.darly.dubbo.lucene.bean.SystemLuceneSearch" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_lucene
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sys_lucene
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sys_lucene
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.darly.dubbo.lucene.bean.SystemLuceneSearch" >
    delete from sys_lucene
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.darly.dubbo.lucene.bean.SystemLucene" >
    insert into sys_lucene (ID, LUCENEKEY, LUCENEVALUE, 
      LUCENEURL)
    values (#{id,jdbcType=VARCHAR}, #{lucenekey,jdbcType=VARCHAR}, #{lucenevalue,jdbcType=VARCHAR}, 
      #{luceneurl,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.darly.dubbo.lucene.bean.SystemLucene" >
    insert into sys_lucene
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="lucenekey != null" >
        LUCENEKEY,
      </if>
      <if test="lucenevalue != null" >
        LUCENEVALUE,
      </if>
      <if test="luceneurl != null" >
        LUCENEURL,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="lucenekey != null" >
        #{lucenekey,jdbcType=VARCHAR},
      </if>
      <if test="lucenevalue != null" >
        #{lucenevalue,jdbcType=VARCHAR},
      </if>
      <if test="luceneurl != null" >
        #{luceneurl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.darly.dubbo.lucene.bean.SystemLuceneSearch" resultType="java.lang.Integer" >
    select count(*) from sys_lucene
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_lucene
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.lucenekey != null" >
        LUCENEKEY = #{record.lucenekey,jdbcType=VARCHAR},
      </if>
      <if test="record.lucenevalue != null" >
        LUCENEVALUE = #{record.lucenevalue,jdbcType=VARCHAR},
      </if>
      <if test="record.luceneurl != null" >
        LUCENEURL = #{record.luceneurl,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_lucene
    set ID = #{record.id,jdbcType=VARCHAR},
      LUCENEKEY = #{record.lucenekey,jdbcType=VARCHAR},
      LUCENEVALUE = #{record.lucenevalue,jdbcType=VARCHAR},
      LUCENEURL = #{record.luceneurl,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.darly.dubbo.lucene.bean.SystemLucene" >
    update sys_lucene
    <set >
      <if test="lucenekey != null" >
        LUCENEKEY = #{lucenekey,jdbcType=VARCHAR},
      </if>
      <if test="lucenevalue != null" >
        LUCENEVALUE = #{lucenevalue,jdbcType=VARCHAR},
      </if>
      <if test="luceneurl != null" >
        LUCENEURL = #{luceneurl,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.darly.dubbo.lucene.bean.SystemLucene" >
    update sys_lucene
    set LUCENEKEY = #{lucenekey,jdbcType=VARCHAR},
      LUCENEVALUE = #{lucenevalue,jdbcType=VARCHAR},
      LUCENEURL = #{luceneurl,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.darly.dubbo.lucene.bean.SystemLuceneSearch" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_lucene
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>