<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd"
       default-lazy-init="true">
    <!--常规HTML登录机制-->
    <security:http auto-config="true" use-expressions="true">
        <security:remember-me remember-me-cookie="SPRING_SECURITY_REMEMBER_ME_COOKIE"
                              remember-me-parameter="_spring_security_remember_me" use-secure-cookie="true"
                              user-service-ref="userDetailsService"/>
        <!--****** 主要完成内容，用户只能在一个地方登陆一次，其他地方登陆无效 -->
        <security:session-management>
            <!--session-authentication-strategy-ref="sas"-->
            <!-- ****** 第一步： error-if-maximum-exceeded属性为false的话，踢掉原来的登录， max-sessions默认为1 -->
            <security:concurrency-control max-sessions="1" error-if-maximum-exceeded="false" expired-url="/sameuser"/>
        </security:session-management>
        <!-- 指定默认登陆页面 -->
        <security:form-login always-use-default-target="true" default-target-url="/home/admin/"
                             username-parameter="dubbo_username" password-parameter="dubbo_password"
                             login-processing-url="/login"
                             login-page="/loginPage?error=false" authentication-failure-url="/loginPage?error=true"/>
        <!-- 退出登录时删除session对应的cookie -->
        <security:logout success-handler-ref="logoutSuccessHandler" delete-cookies="JSESSIONID"
                         logout-url="/j_spring_security_logout"/>
        <security:csrf disabled="true"/>
        <security:headers disabled="true"/>
        <security:intercept-url pattern="/home/admin/" access="isAuthenticated()"/>
        <security:intercept-url pattern="/option/*" access="isAuthenticated()"/>
        <security:intercept-url pattern="/websocket/skt/**" access="isAuthenticated()"/>
        <security:intercept-url pattern="/**/testftp.jsp*" access="permitAll"/>
        <security:intercept-url pattern="proxy.jsp" access="permitAll"/>
        <security:intercept-url pattern="/login.jsp*" access="permitAll"/>
        <security:intercept-url pattern="/**/*.png*" access="permitAll"/>
        <security:intercept-url pattern="/**/*.html*" access="permitAll"/>
        <security:intercept-url pattern="/**/*.css*" access="permitAll"/>
        <security:intercept-url pattern="/**/*.js*" access="permitAll"/>
        <security:intercept-url pattern="/**/*.cgi*" access="permitAll"/>
        <security:intercept-url pattern="/index.jsp" access="permitAll"/>
    </security:http>

    <!-- 认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider user-service-ref="userDetailsService">
            <security:password-encoder hash="md5" ref="md5PasswordEncoder">
                <security:salt-source user-property="username"/>
            </security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="userDetailsService" class="com.darly.dubbo.security.securitycfg.UserDetailServer"/>

    <bean id="md5PasswordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"/>
    <bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
        <property name="userPropertyToUse" value="username"/>
    </bean>
    <bean id="daoAuthenticationProvider"
          class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="userDetailsService"/>
        <property name="passwordEncoder" ref="md5PasswordEncoder"/>
        <property name="saltSource" ref="saltSource"/>
    </bean>

    <bean id="logoutSuccessHandler" class="com.darly.dubbo.security.securitycfg.LoginoutSuccessHandler">
        <property name="alwaysUseDefaultTargetUrl" value="true"/>
        <property name="defaultTargetUrl" value="/forwardLogin/"/>
    </bean>


    <bean id="loginSuccessListener" class="com.darly.dubbo.security.securitycfg.LoginSuccessListener"/>

    <bean id="loginFailureListener" class="com.darly.dubbo.security.securitycfg.LoginFailureListener"/>
</beans>